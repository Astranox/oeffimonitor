{
  "name": "oeffimonitor",
  "version": "0.0.1",
  "description": "Oeffimonitor for the metalab.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "start": "npm run browserify && npm run build && NODE_ENV='production' node --harmony httpd.js",
    "build": "babel server/httpd.js -o ./httpd.js",
    "dev": "babel-node server/httpd.js",
    "browserify": "browserify ./site/update.js -t [babelify --stage 0] -o site/bundle.js",
    "watchify": "watchify ./site/update.js -t [babelify --stage 0] -o site/bundle.js",
    "lint": "csslint ./site/*.css && jscs ./site/settings.js ./site/update.js ./server/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/metalab/oeffimonitor"
  },
  "author": "Metalab",
  "license": "AGPL-3.0",
  "bugs": {
    "url": "https://github.com/metalab/oeffimonitor/issues"
  },
  "homepage": "https://github.com/metalab/oeffimonitor",
  "dependencies": {
    "babel": "^5.8.23",
    "babelify": "^6.3.0",
    "browserify": "^11.2.0",
    "csslint": "^0.10.0",
    "jscs": "^2.2.1",
    "object-assign": "^4.0.1",
    "watchify": "^3.4.0"
  },
  "babel": {
    "stage": 0
  },
  "jscsConfig": {
    "disallowKeywords": [
      "with"
    ],
    "disallowKeywordsOnNewLine": [
      "else"
    ],
    "disallowMixedSpacesAndTabs": true,
    "disallowMultipleVarDecl": "exceptUndefined",
    "disallowNewlineBeforeBlockStatements": true,
    "disallowQuotedKeysInObjects": true,
    "disallowSpaceAfterObjectKeys": true,
    "disallowSpaceAfterPrefixUnaryOperators": true,
    "disallowSpacesInFunction": {
      "beforeOpeningRoundBrace": true
    },
    "disallowSpacesInsideParentheses": true,
    "disallowTrailingWhitespace": true,
    "maximumLineLength": 80,
    "requireCamelCaseOrUpperCaseIdentifiers": true,
    "requireCapitalizedComments": true,
    "requireCapitalizedConstructors": true,
    "requireCurlyBraces": true,
    "requireSpaceAfterKeywords": [
      "if",
      "else",
      "for",
      "while",
      "do",
      "switch",
      "case",
      "return",
      "try",
      "catch",
      "typeof"
    ],
    "requireSpaceAfterLineComment": true,
    "requireSpaceAfterBinaryOperators": true,
    "requireSpaceBeforeBinaryOperators": true,
    "requireSpaceBeforeBlockStatements": true,
    "requireSpaceBeforeObjectValues": true,
    "requireSpacesInFunction": {
      "beforeOpeningCurlyBrace": true
    },
    "requireTrailingComma": {
      "ignoreSingleLine": true
    },
    "validateIndentation": 2,
    "validateLineBreaks": "LF",
    "validateQuoteMarks": "'"
  }
}
